package newpackage;

import java.util.Arrays;


public class Vetor {
    
    private Aluno[] alunos = new Aluno[3];
    
    private int totalDeAlunos = 0;
    
    private void garantaEspaço()
    {
        if(this.totalDeAlunos == this.alunos.length)
        {
            Aluno[] novaArray = new Aluno[this.alunos.length * 2];
            
            for(int i = 0; i < this.alunos.length; i++)
            {
                novaArray[i] = this.alunos[1];
            }
            this.alunos = novaArray;
        }
    }
    
    public void adiciona(Aluno aluno)
    {
        this.garantaEspaço();
        this.alunos[this.totalDeAlunos] = aluno;
        this.totalDeAlunos++;
    }
    
    public void adiciona(int posicao, Aluno aluno)
    {
        this.garantaEspaço();
        if(!this.posicaValida(posicao))
        {
            throw new IllegalArgumentException("Posição inválida");
        }
        
        for(int i = this.totalDeAlunos - 1; i >= posicao; i--)
        {
            this.alunos[i + 1] = this.alunos[i];
        }
        
        this.alunos[posicao] = aluno;
        this.totalDeAlunos++;
    }
    
    public void remove(int posição)
    {
        if(!this.posicaOcupada(posição))
        {
            throw new IllegalArgumentException("Posição Inválida");
        }
        
        for (int i = posição; i < this.totalDeAlunos - 1; i++)
        {
            this.alunos[i] = this.alunos[i + 1];
        }
        
        this.totalDeAlunos--;
    }
    
    public boolean contem(Aluno aluno)
    {
        for(int i = 0; i < alunos.length; i++)
        {
            if(alunos.equals(alunos[i]))
                return true;
        }
        return false;
    }
    
    public int tamanho()
    {
        return this.totalDeAlunos;
    }
    
    public String toString()
    {
        if(this.totalDeAlunos == 0)
        {
            return"[]";
        }
        
        StringBuilder builder = new StringBuilder();
        builder.append("[");
        
        for(int i = 0; i < this.totalDeAlunos - 1; i++)
        {
            builder.append(this.alunos[i]);
            builder.append(", ");
        }
        
        builder.append(this.alunos[this.totalDeAlunos - 1]);
        builder.append("]");
        
        return builder.toString();
    }
    
    public String toString2()
    {
        if(totalDeAlunos == 0)
        {
            return "[]";
        }
        
        String retorno;
        
        retorno = "[";
        
        for(int i = 0; i < totalDeAlunos - 1; i++)
        {
            retorno += alunos[i] + ", ";
        }
        
        retorno += alunos[totalDeAlunos - 1];
        retorno += "]";
        
        return retorno;
    }
    
    private boolean posicaOcupada(int posicao)
    {
        return posicao >= 0 && posicao < this.totalDeAlunos;
    }
    
    public Aluno pega(int posicao)
    {
        if(!this.posicaOcupada(posicao))
        {
            throw new IllegalArgumentException("Posição Inválida");
        }
        return this.alunos[posicao];
    }
    
    private boolean posicaValida(int posicao)
    {
        return posicao >= 0 && posicao <= this.totalDeAlunos;
    }
    
    public int tamanhoArray()
    {
        return this.alunos.length;
    }
}
